import useAuth from "../contexts/AuthContext";
import { getCookie } from "../services/cookies";
import Cookies from "js-cookie";
import {
  Accordion,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Box,
  Button,
  HStack,
  Text,
  Image,
  Heading,
  ButtonGroup,
  Stack,
  RadioGroup,
  InputGroup,
  InputLeftElement,
  Input,
  Container,
  Spacer,
  VStack,
} from "@chakra-ui/react";
import Head from "next/head";

import Info from "../../components/InfoComponent";
import AccordionItemProps from "../../components/AcordionItem";
import {
  AddIcon,
  MinusIcon,
  PhoneIcon,
  WarningTwoIcon,
} from "@chakra-ui/icons";
import FooterJSX from "../../components/Footer";
import RadioPlans from "../../components/RadioPlans";
import { useRouter } from "next/router";
import Images from "next/image";
import SegmentedControl from "../../components/SegmentControl";
import { useTranslation } from 'react-i18next';
import SetLanguage from "../contexts/language";
import {useEffect, useRef, useState} from "react";
import Link from "next/link";

export default function Home() {
  const { login, send_mail} = useAuth();
  const [isSelected, setIsSelected] = useState(null);
  const router = useRouter();
  const { allApiWithClientIP } = SetLanguage()
  const { t, i18n } = useTranslation();
  const email = Cookies.get("email");
  const handleItemClick = (index) => {
    setIsSelected(index.target.value);
  };

  const [selectedValue1, setSelectedValue1] = useState("complete");

  useEffect(() => {
    allApiWithClientIP();
  }, [])
  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box width={"100%"} height={"50vh"}  marginTop={'-5px'}>
        <Container maxW={'container.xl'}>
        <Box
         w={'100%'}
         justifyContent={{base : 'space-between' , md : 'space-between'}}
         display={'flex'}  py={3}
         flexDirection={'row'}
        >
        
          <Box>
          <Link href="/">
           <Image
           
           
           width={{base : 120 , md : 180}}
           src={'/white-logo.png'} cursor="pointer"
         /></Link>
          </Box>
          <Box 
          p={{base : 2 , md:8}}
          display={'flex'}
          justifyContent={'center'}
          alignItems={'center'}
          >
            <Text 
            color={'#fff'}
            fontWeight={'normal'}
            fontSize={{base : '7px' , md : 'sm'}}
            mr={{base: 3,md:6}}>{t('resendEmail.text1')}</Text>
            <Spacer />
            <Button
            onClick={() => router.push('/login')}
            borderColor={'#fff'}
            variant={'outline'}
            color={'#fff'}
            size={{base : 'sm' , md :'md'}}
            >{t('resendEmail.text2')}</Button>
          </Box>
        </Box>
        </Container>
     
      </Box>

      <Box width={"100%"} height={"50vh"} backgroundColor={"#000"}></Box>

      <main style={{ maxWidth: "1420px", margin: "auto" }}>
        <Box
          mt={10}
          mb={10}
          display={"flex"}
          width={"100%"}
          position={"absolute"}
          top={{base : '100px' , md: "25vh"}}
          left={"0vw"}
          flexDirection={"column"}
        >
          <Box
          boxShadow="0px 4px 8px rgba(0, 0, 0, 0.1)" 
            borderRadius={"10px"}
            mx={{base : '20px' , sm : 'auto'}}
            maxW={"1420px"}
            minW={{ base: 300, md: 400 }}
            maxWidth={600}
            px={7}
            pt={8}
            pb={3}
          
            backgroundcolor={"#000"}
            display={"flex"}
            flexDirection={"column"}
            alignItems={"center"}
            bg='#fff'
            color={'black'}
          >
        

           

            <VStack p={4} pt={1} w={"100%"} spacing={3} justifyContent={'center'} textAlign={'center'}>
                <Box>
            <svg height='70px' width='90px' xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" fill="none" preserveAspectRatio="xMidYMid meet" style={{fill : 'none'}} version="1.0" viewBox="770.0 771.0 1459.0 1459.0" zoomAndPan="magnify" original_string_length="920"><g id="__id359_sqddr8cv5"><circle cx="1499.5" cy="1500.5" r="729.5" style={{fill: 'rgb(32, 163, 158)'}}/></g><g id="__id360_sqddr8cv5"><path d="M1900.03 1362.69C1939.07 1323.63 1939.06 1260.32 1900 1221.27C1860.94 1182.23 1797.62 1182.24 1758.58 1221.31L1412.48 1567.56L1239.71 1394.79C1200.66 1355.74 1137.34 1355.74 1098.29 1394.79C1059.24 1433.84 1059.24 1497.16 1098.29 1536.21L1341.79 1779.71C1360.55 1798.47 1385.99 1809 1412.51 1809C1439.04 1809 1464.48 1798.45 1483.23 1779.69L1900.03 1362.69Z" style={{fill: 'rgb(255, 255, 255)'}}/></g></svg>

                </Box>
<VStack mb={'30px'}>
<Heading size={'md'} fontWeight={'bold'} >E-mail sent</Heading>
<Text fontSize={'9px'} fontWeight={'normal'} color={'#717273'} my={3}>
We have resent the email to <b>r******_***_**@h******.com </b>  <br />with password reset instructions.
 
</Text>
</VStack>
</VStack>

          </Box>
        </Box>
      </main>
    </Box>
  );
}



export async function getServerSideProps(context) {
    const token = getCookie("token", context.req);
  
    if (token) {
      return {
        redirect: {
          destination: "/dashboard",
          permanent: false,
        },
      };
    }
    return {
      props: {},
    };
  }
  