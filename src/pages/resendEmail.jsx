import useAuth from "../contexts/AuthContext";
import { getCookie } from "../services/cookies";
import Cookies from "js-cookie";
import {
  Accordion,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Box,
  Button,
  HStack,
  Text,
  Image,
  Heading,
  ButtonGroup,
  Stack,
  RadioGroup,
  InputGroup,
  InputLeftElement,
  Input,
  Container,
  Spacer,
  VStack,
} from "@chakra-ui/react";
import Head from "next/head";

import Info from "../../components/InfoComponent";
import AccordionItemProps from "../../components/AcordionItem";
import {
  AddIcon,
  MinusIcon,
  PhoneIcon,
  WarningTwoIcon,
} from "@chakra-ui/icons";
import FooterJSX from "../../components/Footer";
import RadioPlans from "../../components/RadioPlans";
import { useRouter } from "next/router";
import Images from "next/image";
import SegmentedControl from "../../components/SegmentControl";
import { useTranslation } from 'react-i18next';
import SetLanguage from "../contexts/language";
import {useEffect, useRef, useState} from "react";
import Link from "next/link";

export default function Home() {
  const { login, send_mail} = useAuth();
  const [isSelected, setIsSelected] = useState(null);
  const router = useRouter();
  const { allApiWithClientIP } = SetLanguage()
  const { t, i18n } = useTranslation();
  const email = Cookies.get("email");
  const handleItemClick = (index) => {
    setIsSelected(index.target.value);
  };

  const [selectedValue1, setSelectedValue1] = useState("complete");

  useEffect(() => {
    allApiWithClientIP();
  }, [])
  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box width={"100%"} height={"50vh"}  marginTop={'-5px'}>
        <Container maxW={'container.xl'}>
        <Box
         w={'100%'}
         justifyContent={{base : 'space-between' , md : 'space-between'}}
         display={'flex'}  py={3}
         flexDirection={'row'}
        >
        
          <Box>
          <Link href="/">
           <Image
           
           
           width={{base : 120 , md : 180}}
           src={'/white-logo.png'} cursor="pointer"
         /></Link>
          </Box>
          <Box 
          p={{base : 2 , md:8}}
          display={'flex'}
          justifyContent={'center'}
          alignItems={'center'}
          >
            <Text 
            color={'#fff'}
            fontWeight={'normal'}
            fontSize={{base : '7px' , md : 'sm'}}
            mr={{base: 3,md:6}}>{t('resendEmail.text1')}</Text>
            <Spacer />
            <Button
            onClick={() => router.push('/login')}
            borderColor={'#fff'}
            variant={'outline'}
            color={'#fff'}
            size={{base : 'sm' , md :'md'}}
            >{t('resendEmail.text2')}</Button>
          </Box>
        </Box>
        </Container>
     
      </Box>

      <Box width={"100%"} height={"50vh"} backgroundColor={"#000"}></Box>

      <main style={{ maxWidth: "1420px", margin: "auto" }}>
        <Box
          mt={10}
          mb={10}
          display={"flex"}
          width={"100%"}
          position={"absolute"}
          top={{base : '100px' , md: "25vh"}}
          left={"0vw"}
          flexDirection={"column"}
        >
          <Box
          boxShadow="0px 4px 8px rgba(0, 0, 0, 0.1)" 
            borderRadius={"10px"}
            mx={{base : '20px' , sm : 'auto'}}
            maxW={"1420px"}
            minW={{ base: 300, md: 400 }}
            maxWidth={600}
            px={7}
            pt={8}
            pb={3}
          
            backgroundcolor={"#000"}
            display={"flex"}
            flexDirection={"column"}
            alignItems={"center"}
            bg='#fff'
            color={'black'}
          >
        

           

            <VStack p={4} pt={1} w={"100%"} spacing={3} justifyContent={'center'} textAlign={'center'}>
<Image src="/email.png" alt="Email" height={'70px'} width={'90px'} objectFit={'contain'}></Image>
<VStack mb={'30px'}>
<Heading size={'md'} fontWeight={'bold'} >{t('resendEmail.text3')}</Heading>
<Text fontSize={'9px'} fontWeight={'normal'} color={'#717273'}>
  {t('resendEmail.text4')} <br /> {t('resendEmail.text5')}
 
</Text>
</VStack>
</VStack>
<Button
   backgroundColor={"#01FBFB"}
   color={"#000"}
   py={6}
   px={8}
   my={5}
   w='full'
  
   fontSize={{ base: "sm", md: "md" }}
   _hover={{
    bg: "#0db9b9",
     boxShadow: "0 0 10px rgba(1, 251, 251, 0.7)",
     transition: "background-color 0.3s, color 0.3s, box-shadow 0.3s",
   }}
    onClick={() => send_mail(email)}
  >
  {t('resendEmail.text6')}
  </Button>
          </Box>
        </Box>
      </main>
    </Box>
  );
}

export async function getServerSideProps(context) {
  const token = getCookie("token", context.req);

  if (token) {
    return {
      redirect: {
        destination: "/dashboard",
        permanent: false,
      },
    };
  }
  return {
    props: {},
  };
}
