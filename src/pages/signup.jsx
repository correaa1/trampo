import useAuth from "../contexts/AuthContext";
import { getCookie } from "../services/cookies";
import {
  Accordion,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Box,
  Button,
  HStack,
  Text,
  Image,
  Heading,
  ButtonGroup,
  Stack,
  RadioGroup,
  InputGroup,
  InputLeftElement,
  Input,
  Container,
  Spacer,
  VStack,
} from "@chakra-ui/react";
import Head from "next/head";
import {GoMail} from 'react-icons/go';
import {IoLogoGoogle} from 'react-icons/io'
import Info from "../../components/InfoComponent";
import AccordionItemProps from "../../components/AcordionItem";
import {
  AddIcon,
  MinusIcon,
  PhoneIcon,
  WarningTwoIcon,
} from "@chakra-ui/icons";
import FooterJSX from "../../components/Footer";
import RadioPlans from "../../components/RadioPlans";

import { useTranslation } from 'react-i18next';
import SetLanguage from "../contexts/language";

import { useRouter } from "next/router";
import Images from "next/image";
import SegmentedControl from "../../components/SegmentControl";
import {useEffect, useRef, useState} from "react";

export default function Home() {
  const { login } = useAuth();
  const [isSelected, setIsSelected] = useState(null);
  const router = useRouter();
    const { allApiWithClientIP } = SetLanguage()
    const { t, i18n } = useTranslation();
  const handleItemClick = (index) => {
    setIsSelected(index.target.value);
  };

  const [selectedValue1, setSelectedValue1] = useState("complete");

    useEffect(() => {
        allApiWithClientIP();
    }, [])

  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box width={"100%"} height={"50vh"}  marginTop={'-5px'}>
        <Container maxW={'container.xl'}>
        <Box
         w={'100%'}
         justifyContent={{base : 'space-between' , md : 'space-between'}}
         display={'flex'}  py={3}
         flexDirection={'row'}
        >
        
          <Box>
            <Image
              width={{base : 120 , md : 180}}
              src={'/white-logo.png'} cursor="pointer"
            />
          </Box>
          <Box 
          p={{base : 2 , md:8}}
          display={'flex'}
          justifyContent={'center'}
          alignItems={'center'}
          >
            <Text 
            color={'#fff'}
            fontWeight={'normal'}
            fontSize={{base : '7px' , md : 'sm'}}
            mr={{base: 3,md:6}}>{t('signup.text2')}</Text>
            <Spacer />
            <Button
            onClick={() => router.push('/login')}
            borderColor={'#fff'}
            variant={'outline'}
            color={'#fff'}
            size={{base : 'sm' , md :'md'}}
            >{t('signup.text1')}</Button>
          </Box>
        </Box>
        </Container>
     
      </Box>

      <Box width={"100%"} height={"50vh"} backgroundColor={"#000"}></Box>

     <Box pos={'absolute'} top={'60%'} left={'50%'} transform={'translate(-50% , -50%)'} textAlign={'center'} maxW={'530px'} width={'95%'}>
<Heading mb={'70px'}>
    {t('signup.text3')}
</Heading>
<Box>
<VStack>
<Button
              backgroundColor={"#01FBFB"}
              color={"#000"}
            
              py={6}
         pr={10}
         mb={2}
         minW={'299px'}
              fontSize={{ base: "sm", md: "md" }}
              _hover={{
                bg: "#0db9b9",
                boxShadow: "0 0 10px rgba(1, 251, 251, 0.7)",
                transition:
                  "background-color 0.3s, color 0.3s, box-shadow 0.3s",
              }}
              leftIcon={<GoMail fontSize={'20px'} style={{marginRight:'30px'}} ></GoMail>}
              onClick={() => {
                router.push("/signupwithemail");
              }}
            >
                 {t('signup.text4')}
            </Button>
            <Button
              backgroundColor={"#000"}
              color={"#01FBFB"}
              border={'1px solid #01FBFB'}
         minW={'299px'}
            

              py={6}
         pr={10}
              fontSize={{ base: "sm", md: "md" }}
             
              leftIcon={<IoLogoGoogle fontSize={'20px'} style={{marginRight:'30px'}} color="#01FBFB" ></IoLogoGoogle>}
              onClick={() => {
                router.push("/planos");
              }}
            >
                {t('signup.text4')}
            </Button>
</VStack>
</Box>
     </Box>

    </Box>
  );
}

export async function getServerSideProps(context) {
  const token = getCookie("token", context.req);

  if (token) {
    return {
      redirect: {
        destination: "/dashboard",
        permanent: false,
      },
    };
  }
  return {
    props: {},
  };
}
